### Creates a Cubic Spline Function for Experimentally Obtained Thrust Curve Data ###

from numpy import arange, linspace, array, linspace, vstack, std, mean
from matplotlib import pyplot as plt
from scipy.interpolate import CubicSpline

F = array([0.605785905,0.636368676,0.636368676,0.605785905,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.605785905,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.605785905,0.636368676,0.605785905,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.605785905,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.636368676,0.605785905, \
           0.605785905,0.636368676,0.636368676,0.605785905,0.636368676,0.605785905,0.636368676, \
           0.636368676,0.605785905,0.636368676,0.605785905,0.605785905,0.605785905,0.636368676, \
           0.605785905,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.636368676, \
           0.636368676,0.636368676,0.605785905,0.605785905,0.636368676,0.636368676,0.636368676, \
           0.605785905,0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.605785905,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.605785905,0.636368676,0.636368676,0.605785905, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.605785905,0.636368676, \
           0.605785905,0.636368676,0.636368676,0.636368676,0.605785905,0.605785905,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.605785905,0.636368676,0.605785905,0.636368676, \
           0.697534217,0.728116988,0.758699759,0.78928253,0.850448071,0.881030842,1.001450501, \
           1.276695438,1.915110776,2.949190711,4.409518012,6.114507479,7.817585522,9.644906072, \
           11.37856689,12.96122527,13.53847507,10.25273864,7.056839101,5.445509369,4.562431865, \
           4.105601728,3.801685444,3.648771591,3.528351931,3.49776916,3.436603619,3.283689765, \
           2.91860794,2.461777803,1.976276318,1.550028951,1.276695438,1.093198814,1.001450501, \
           0.909702189,0.8198653,0.78928253,0.758699759,0.728116988,0.697534217,0.697534217, \
           0.697534217,0.666951447,0.697534217,0.666951447,0.666951447,0.666951447,0.666951447, \
           0.666951447,0.666951447,0.666951447,0.666951447,0.666951447,0.666951447,0.666951447, \
           0.666951447,0.666951447,0.666951447,0.666951447,0.636368676,0.636368676,0.666951447, \
           0.636368676,0.666951447,0.666951447,0.636368676,0.666951447,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.666951447,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.666951447,0.636368676,0.666951447,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.666951447,0.666951447,0.636368676, \
           0.666951447,0.636368676,0.636368676,0.666951447,0.636368676,0.636368676,0.666951447, \
           0.666951447,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.666951447,0.666951447,0.636368676, \
           0.666951447,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.666951447,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.666951447, \
           0.666951447,0.636368676,0.666951447,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676,0.636368676, \
           0.636368676,0.636368676,0.666951447,0.636368676,0.636368676,0.636368676,0.666951447, \
           3.406020848,3.558934702,0.8198653,-0.154960516,-0.550625112,-0.701627542,1.305366785, \
           0.8198653,0.605785905,0.515949016,0.393617934,0.393617934,0.363035163,0.393617934, \
           0.363035163,0.393617934,0.363035163,0.393617934,0.393617934,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.393617934,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.393617934,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.332452392,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.332452392,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.332452392,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.332452392, \
           0.363035163,0.363035163,0.332452392,0.363035163,0.332452392,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.332452392,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.332452392,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.332452392,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.332452392,0.363035163,0.332452392,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.332452392,0.363035163,0.363035163,0.363035163,0.363035163,0.332452392,0.363035163, \
           0.332452392,0.363035163,0.332452392,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.332452392,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.332452392,0.363035163,0.363035163,0.332452392, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.332452392,0.363035163, \
           0.363035163,0.363035163,0.332452392,0.363035163,0.363035163,0.332452392,0.363035163, \
           0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163,0.332452392, \
           0.363035163,0.332452392,0.363035163,0.363035163,0.363035163,0.363035163,0.363035163, \
           0.363035163,0.363035163,0.363035163,])

F = F - 0.630216969  # Subtract the background
F_cropped = F[174:220]
t = arange(0,len(F_cropped)*.02,.02)
cs1 = CubicSpline(t, F_cropped)
F_new = cs1(t)

F2 = array([
    0,0.030435657,0.030435657,0.060871313,0.060871313, \
    0.060871313,0.09130697,0.121742627,0.121742627,0.152178283, \
    0.18261394,0.18261394,0.243485253,0.272018681,0.302454338, \
    0.393761308,0.545939591,0.787522616,1.089976954,1.392431292, \
    1.814726029,2.267456421,2.841929441,3.446838117,4.08218245, \
    4.747962439,5.533582827,6.380074528,7.348308856,8.253769641, \
    9.100261342,9.918219615,10.67340435,11.03673,10.91498737, \
    10.61253303,9.796476988,8.525788323,7.317873199,6.349638871, \
    5.624889797,5.109385862,4.687091126,4.415072445,4.112618107, \
    3.901470738,3.749292455,3.629452057,3.50770943,3.446838117, \
    3.41640246,3.326997719,3.296562062,3.296562062,3.266126406, \
    3.266126406,3.235690749,3.113948122,2.872365098,2.510941675, \
    2.208487337,1.875597342,1.60357866,1.331559979,1.120412611, \
    0.907363014,0.757086959,0.66577999,0.57447302,0.515503935, \
    0.454632621,0.424196965,0.393761308,0.363325651,0.332889995, \
    0.302454338,0.302454338,0.302454338,0.272018681,0.272018681, \
    0.243485253,0.243485253,0.243485253,0.243485253,0.243485253, \
    0.243485253,0.243485253,0.243485253,0.243485253,0.243485253, \
    0.213049597,0.243485253,0.213049597,0.213049597,0.213049597, \
    0.18261394,0.213049597,0.213049597,0.213049597,0.213049597, \
    0.213049597,0.213049597,0.213049597,0.213049597,0.18261394, \
    0.213049597,0.213049597,0.213049597,0.213049597,0.213049597, \
    0.213049597,0.213049597,0.213049597,0.213049597,0.213049597, \
    0.18261394,0.213049597,0.213049597,0.18261394,0.18261394, \
    0.18261394,0.18261394,0.213049597,0.213049597,0.18261394, \
    0.213049597,0.18261394])

F2 = F2[1:]
t2 = arange(0,len(F2)*.01,.01)
cs2 = CubicSpline(t2, F2)
F2_new = cs2(t2)

F3 = [
    0,0,0,0.030435657,0.030435657, \
    0,0,0.030435657,0,0, \
    0.030435657,0,0.030435657,0.030435657,0.030435657, \
    0.030435657,0.121742627,0.09130697,0.060871313,0.09130697, \
    0.121742627,0.150276055,0.150276055,0.180711711,0.180711711, \
    0.211147368,0.241583025,0.332889995,0.363325651,0.422294736, \
    0.48316605,0.604908676,0.785620388,1.027203412,1.32965775, \
    1.723419059,2.206585108,2.841929441,3.538145087,4.202022848, \
    4.959109808,5.744730195,6.621657553,7.557553995,8.345076611, \
    9.222003969,10.12746475,11.12613474,12.09246684,12.93895854, \
    13.48489813,13.09113682,11.27641079,9.069825686,7.346406627, \
    6.016748877,5.170257176,4.565348499,4.202022848,3.89956851, \
    3.718856799,3.538145087,3.385966804,3.294659834,3.235690749, \
    3.174819436,3.144383779,3.113948122,3.113948122,3.083512466, \
    2.992205496,2.811493784,2.630782073,2.448168133,2.237020765, \
    1.965002083,1.692983402,1.390529064,1.148946039,0.968234328, \
    0.785620388,0.696215646,0.57447302,0.513601706,0.452730393, \
    0.422294736,0.363325651,0.332889995,0.302454338,0.272018681, \
    0.241583025,0.241583025,0.211147368,0.180711711,0.180711711, \
    0.180711711,0.150276055,0.150276055,0.150276055,0.150276055, \
    0.121742627,0.121742627,0.121742627,0.121742627
]

F3 = F3[17:]
t3 = arange(0,len(F3)*.01,.01)
cs3 = CubicSpline(t3, F3)
F3_new = cs3(t3)


#### Average and STDev ####

total_time = arange(0,.8,.01)

curve_1 = array(cs1(total_time))
curve_2 = array(cs2(total_time))
curve_3 = array(cs3(total_time))

average_curve = (curve_1 + curve_2 + curve_3) / 3

t4 = arange(0,len(average_curve)*.01,.01)
csAVG = CubicSpline(t4, average_curve)
Average_Spline = csAVG(total_time)

tot_data = vstack((curve_1, curve_2, curve_3))  # Shape becomes (3, N)
std_devs = std(tot_data, axis=0, ddof=1)
avg_stdev = mean(std_devs)



if __name__ == "__main__":
  curve_1 = array(cs1(total_time))
  curve_2 = array(cs2(total_time))
  curve_3 = array(cs3(total_time))
  Average_Spline = csAVG(total_time)

  plt.figure()
  plt.plot(total_time, curve_1, 'r-',  label = "Curve 1")
  plt.plot(total_time,curve_2, 'g-.',  label = "Curve 2")
  plt.plot(total_time,curve_3, 'b--',  label = "Curve 3")
  plt.plot(total_time, Average_Spline, 'k', label = f"Average Spline (σ = {avg_stdev:.2f})")
  plt.legend()
  plt.xlabel("Time (S)")
  plt.ylabel("Force (N)")
  plt.title("Thrust Curve Data")
  plt.show()
